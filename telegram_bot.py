# Telegram –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å—Å—ã–ª–∫–∏
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞: pip install python-telegram-bot

from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –¢–û–ö–ï–ù –û–¢ BOTFATHER
TOKEN = "8373173629:AAFLOFDAkjEwTv3vwAOTkn1_cPdB8rU3ujo"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    chat_id = update.message.chat_id
    
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–Ø –∂–¥—É –æ—Ç –≤–∞—Å:\n"
        "1. –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é üì∑\n"
        "2. –°—Å—ã–ª–∫—É –Ω–∞ –≤–µ–±-—Ä–µ—Å—É—Ä—Å üîó\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞, –∏ —è –≤–∞—Å –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä—é!"
    )
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if chat_id not in user_data:
        user_data[chat_id] = {"photo": False, "link": False}


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
    chat_id = update.message.chat_id
    
    if chat_id not in user_data:
        user_data[chat_id] = {"photo": False, "link": False}
    
    user_data[chat_id]["photo"] = True
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ —É—Å–ª–æ–≤–∏—è
    await check_completion(update, context, chat_id)


async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å—Å—ã–ª–æ–∫)"""
    chat_id = update.message.chat_id
    message_text = update.message.text
    
    if chat_id not in user_data:
        user_data[chat_id] = {"photo": False, "link": False}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ http:// –∏–ª–∏ https://
    if "http://" in message_text or "https://" in message_text:
        user_data[chat_id]["link"] = True
        await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ —Å—Å—ã–ª–∫—É!")
        
        await check_completion(update, context, chat_id)
    else:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å–æ–¥–µ—Ä–∂–∞—â—É—é http:// –∏–ª–∏ https://"
        )


async def check_completion(update: Update, context: ContextTypes.DEFAULT_TYPE, chat_id: int) -> None:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –æ–±–∞ —É—Å–ª–æ–≤–∏—è"""
    if user_data[chat_id]["photo"] and user_data[chat_id]["link"]:
        await context.bot.send_message(
            chat_id=chat_id,
            text="üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –Ø –ø–æ–ª—É—á–∏–ª –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ —Å—Å—ã–ª–∫—É!"
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
        user_data[chat_id] = {"photo": False, "link": False}


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()


if __name__ == '__main__':
    main()
